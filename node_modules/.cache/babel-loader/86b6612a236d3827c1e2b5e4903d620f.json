{"ast":null,"code":"import CardHand from './CardHand';\nimport DeckAPI from './DeckAPI';\nexport default class GameEngine {\n  constructor() {\n    this.deckAPI = undefined;\n    this.cardHand = undefined;\n    this.gameTotal = undefined;\n\n    this.doNumberValue = c => {\n      return GameEngine.values[c.value];\n    };\n\n    this.start = async () => {\n      this.deckId = await this.deckAPI.newDeck();\n      this.cardHand = new CardHand();\n      this.gameTotal = 0;\n      console.log(\"STARTING GAME\");\n    };\n\n    this.drawCard = async () => {\n      this.doChecks();\n      let card = await this.deckAPI.drawCard();\n      this.cardHand.addCard(card);\n      this.gameTotal += this.doNumberValue(card);\n      console.log(\"GameEngine - Newe Card, total \", card, gameTotal);\n    };\n\n    this.deckAPI = new DeckAPI();\n  }\n\n  doChecks() {\n    if (!this.cardHand || this.gameTotal === undefined) throw Error(`Must call start() before other methods on GameEngine (${this.cardHand}, ${this.gameTotal})`);\n  }\n\n  get total() {\n    this.doChecks();\n    return this.gameTotal;\n  }\n\n  get hand() {\n    this.doChecks();\n    console.log(\"game.hand() - \", this.cardHand);\n    return this.cardHand;\n  }\n\n  get nCardsInHand() {\n    this.doChecks();\n    return this.cardHand.nCards;\n  }\n\n}\nGameEngine.values = {\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"0\": 10,\n  \"JACK\": 10,\n  \"QUEEN\": 10,\n  \"KING\": 10,\n  \"ACE\": 11\n};","map":{"version":3,"sources":["/home/mark/GIT/GITHUB/react-card-game/src/GameEngine.js"],"names":["CardHand","DeckAPI","GameEngine","constructor","deckAPI","undefined","cardHand","gameTotal","doNumberValue","c","values","value","start","deckId","newDeck","console","log","drawCard","doChecks","card","addCard","Error","total","hand","nCardsInHand","nCards"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,UAAN,CAAiB;AAsB5BC,EAAAA,WAAW,GAAG;AAAA,SAJjBC,OAIiB,GAJPC,SAIO;AAAA,SAHjBC,QAGiB,GAHND,SAGM;AAAA,SAFjBE,SAEiB,GAFLF,SAEK;;AAAA,SASjBG,aATiB,GASAC,CAAD,IAAO;AAAE,aAAOP,UAAU,CAACQ,MAAX,CAAkBD,CAAC,CAACE,KAApB,CAAP;AAAoC,KAT5C;;AAAA,SAWjBC,KAXiB,GAWT,YAAY;AACnB,WAAKC,MAAL,GAAc,MAAM,KAAKT,OAAL,CAAaU,OAAb,EAApB;AACM,WAAKR,QAAL,GAAgB,IAAIN,QAAJ,EAAhB;AACN,WAAKO,SAAL,GAAiB,CAAjB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,KAhBgB;;AAAA,SAkBjBC,QAlBiB,GAkBN,YAAY;AACtB,WAAKC,QAAL;AAEA,UAAIC,IAAI,GAAG,MAAM,KAAKf,OAAL,CAAaa,QAAb,EAAjB;AACA,WAAKX,QAAL,CAAcc,OAAd,CAAsBD,IAAtB;AACA,WAAKZ,SAAL,IAAkB,KAAKC,aAAL,CAAmBW,IAAnB,CAAlB;AAEAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,IAA9C,EAAoDZ,SAApD;AACA,KA1BgB;;AAChB,SAAKH,OAAL,GAAe,IAAIH,OAAJ,EAAf;AACG;;AAEJiB,EAAAA,QAAQ,GAAG;AACV,QAAK,CAAC,KAAKZ,QAAN,IAAmB,KAAKC,SAAL,KAAmBF,SAA3C,EACC,MAAMgB,KAAK,CAAE,yDAAwD,KAAKf,QAAS,KAAI,KAAKC,SAAU,GAA3F,CAAX;AACD;;AAqBQ,MAALe,KAAK,GAAG;AAAE,SAAKJ,QAAL;AAAiB,WAAO,KAAKX,SAAZ;AAAwB;;AAC/C,MAAJgB,IAAI,GAAG;AAAE,SAAKL,QAAL;AAAiBH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKV,QAAnC;AAA8C,WAAO,KAAKA,QAAZ;AAAuB;;AACnF,MAAZkB,YAAY,GAAG;AAAE,SAAKN,QAAL;AAAiB,WAAO,KAAKZ,QAAL,CAAcmB,MAArB;AAA8B;;AApDrC;AAAXvB,U,CAEbQ,M,GAAS;AACf,OAAK,CADU;AAEf,OAAK,CAFU;AAGf,OAAK,CAHU;AAIf,OAAK,CAJU;AAKf,OAAK,CALU;AAMf,OAAK,CANU;AAOf,OAAK,CAPU;AAQf,OAAK,CARU;AASf,OAAK,EATU;AAUf,UAAQ,EAVO;AAWf,WAAS,EAXM;AAYf,UAAQ,EAZO;AAaf,SAAO;AAbQ,C","sourcesContent":["import CardHand from './CardHand';\nimport DeckAPI from './DeckAPI';\n\nexport default class GameEngine {\n\n\tstatic values = {\n\t\t\"2\": 2,\n\t\t\"3\": 3,\n\t\t\"4\": 4,\n\t\t\"5\": 5,\n\t\t\"6\": 6,\n\t\t\"7\": 7,\n\t\t\"8\": 8,\n\t\t\"9\": 9,\n\t\t\"0\": 10,\n\t\t\"JACK\": 10,\n\t\t\"QUEEN\": 10,\n\t\t\"KING\": 10, \n\t\t\"ACE\": 11\n\t};\n\n\tdeckAPI = undefined;\n\tcardHand = undefined;\n\tgameTotal = undefined;\n\n    constructor() {\n\t\tthis.deckAPI = new DeckAPI();\n    }\n\n\tdoChecks() {\n\t\tif ( !this.cardHand || (this.gameTotal === undefined) ) \n\t\t\tthrow Error(`Must call start() before other methods on GameEngine (${this.cardHand}, ${this.gameTotal})`);\n\t}\n\n\tdoNumberValue = (c) => { return GameEngine.values[c.value]; }\n\n\tstart = async () => {\n\t\tthis.deckId = await this.deckAPI.newDeck();\n        this.cardHand = new CardHand();\n\t\tthis.gameTotal = 0;\n\t\tconsole.log(\"STARTING GAME\");\n\t}\n\n\tdrawCard = async () => {\n\t\tthis.doChecks();\n\n\t\tlet card = await this.deckAPI.drawCard();\n\t\tthis.cardHand.addCard(card);\n\t\tthis.gameTotal += this.doNumberValue(card);\n\n\t\tconsole.log(\"GameEngine - Newe Card, total \", card, gameTotal);\n\t}\n\n\tget total() { this.doChecks(); return this.gameTotal; }\n\tget hand() { this.doChecks(); console.log(\"game.hand() - \", this.cardHand); return this.cardHand; }\n\tget nCardsInHand() { this.doChecks(); return this.cardHand.nCards; }\n}\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}