{"ast":null,"code":"import CardHand from './CardHand';\nimport DeckAPI from './Deck';\nexport default class GameEngine {\n  doChecks() {\n    if (!this.hand || this.total === undefined) throw Error(\"Must call start() before other methods on GameEngine\");\n  }\n\n  constructor() {\n    this.deckAPI = undefined;\n    this.hand = undefined;\n    this.total = undefined;\n\n    this.numericValue = c => {\n      return GameEngine.values[c.value];\n    };\n\n    this.start = async () => {\n      this.deckId = await this.deckAPI.newDeck();\n      this.hand = new CardHand();\n      this.total = 0;\n    };\n\n    this.drawCard = async () => {\n      this.doChecks();\n      let card = await this.deckAPI.drawCard();\n      this.hand.addCard(card);\n      this.total += this.numericValue(card);\n    };\n\n    this.deckAPI = new DeckAPI();\n  }\n\n  get total() {\n    this.doChecks();\n    return this.total;\n  }\n\n  get hand() {\n    this.doChecks();\n    return this.hand.cards;\n  }\n\n  get nCardsInHand() {\n    this.doChecks();\n    return this.hand.nCards;\n  }\n\n}\nGameEngine.values = {\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"0\": 10,\n  \"JACK\": 10,\n  \"QUEEN\": 10,\n  \"KING\": 10,\n  \"ACE\": 11\n};","map":{"version":3,"sources":["/home/mark/GIT/GITHUB/react-card-game/src/GameEngine.js"],"names":["CardHand","DeckAPI","GameEngine","doChecks","hand","total","undefined","Error","constructor","deckAPI","numericValue","c","values","value","start","deckId","newDeck","drawCard","card","addCard","cards","nCardsInHand","nCards"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,QAApB;AAEA,eAAe,MAAMC,UAAN,CAAiB;AAsB/BC,EAAAA,QAAQ,GAAG;AACV,QAAI,CAAE,KAAKC,IAAP,IAAe,KAAKC,KAAL,KAAeC,SAAlC,EACC,MAAMC,KAAK,CAAC,sDAAD,CAAX;AACD;;AAEEC,EAAAA,WAAW,GAAG;AAAA,SATjBC,OASiB,GATPH,SASO;AAAA,SARjBF,IAQiB,GARVE,SAQU;AAAA,SAPjBD,KAOiB,GAPTC,SAOS;;AAAA,SAIjBI,YAJiB,GAIDC,CAAD,IAAO;AAAE,aAAOT,UAAU,CAACU,MAAX,CAAkBD,CAAC,CAACE,KAApB,CAAP;AAAoC,KAJ3C;;AAAA,SAMjBC,KANiB,GAMT,YAAY;AACnB,WAAKC,MAAL,GAAc,MAAM,KAAKN,OAAL,CAAaO,OAAb,EAApB;AACM,WAAKZ,IAAL,GAAY,IAAIJ,QAAJ,EAAZ;AACN,WAAKK,KAAL,GAAa,CAAb;AACA,KAVgB;;AAAA,SAYjBY,QAZiB,GAYN,YAAY;AACtB,WAAKd,QAAL;AAEA,UAAIe,IAAI,GAAG,MAAM,KAAKT,OAAL,CAAaQ,QAAb,EAAjB;AACA,WAAKb,IAAL,CAAUe,OAAV,CAAkBD,IAAlB;AACA,WAAKb,KAAL,IAAc,KAAKK,YAAL,CAAkBQ,IAAlB,CAAd;AACA,KAlBgB;;AAChB,SAAKT,OAAL,GAAe,IAAIR,OAAJ,EAAf;AACG;;AAkBK,MAALI,KAAK,GAAG;AAAE,SAAKF,QAAL;AAAiB,WAAO,KAAKE,KAAZ;AAAoB;;AAC3C,MAAJD,IAAI,GAAG;AAAE,SAAKD,QAAL;AAAiB,WAAO,KAAKC,IAAL,CAAUgB,KAAjB;AAAyB;;AACvC,MAAZC,YAAY,GAAG;AAAE,SAAKlB,QAAL;AAAiB,WAAO,KAAKC,IAAL,CAAUkB,MAAjB;AAA0B;;AAjDjC;AAAXpB,U,CAEbU,M,GAAS;AACf,OAAK,CADU;AAEf,OAAK,CAFU;AAGf,OAAK,CAHU;AAIf,OAAK,CAJU;AAKf,OAAK,CALU;AAMf,OAAK,CANU;AAOf,OAAK,CAPU;AAQf,OAAK,CARU;AASf,OAAK,EATU;AAUf,UAAQ,EAVO;AAWf,WAAS,EAXM;AAYf,UAAQ,EAZO;AAaf,SAAO;AAbQ,C","sourcesContent":["import CardHand from './CardHand';\nimport DeckAPI from './Deck';\n\nexport default class GameEngine {\n\n\tstatic values = {\n\t\t\"2\": 2,\n\t\t\"3\": 3,\n\t\t\"4\": 4,\n\t\t\"5\": 5,\n\t\t\"6\": 6,\n\t\t\"7\": 7,\n\t\t\"8\": 8,\n\t\t\"9\": 9,\n\t\t\"0\": 10,\n\t\t\"JACK\": 10,\n\t\t\"QUEEN\": 10,\n\t\t\"KING\": 10, \n\t\t\"ACE\": 11\n\t};\n\n\tdeckAPI = undefined;\n\thand = undefined;\n\ttotal = undefined;\n\n\tdoChecks() {\n\t\tif (! this.hand || this.total === undefined ) \n\t\t\tthrow Error(\"Must call start() before other methods on GameEngine\");\n\t}\n\n    constructor() {\n\t\tthis.deckAPI = new DeckAPI();\n    }\n\n\tnumericValue = (c) => { return GameEngine.values[c.value]; }\n\n\tstart = async () => {\n\t\tthis.deckId = await this.deckAPI.newDeck();\n        this.hand = new CardHand();\n\t\tthis.total = 0;\n\t}\n\n\tdrawCard = async () => {\n\t\tthis.doChecks();\n\n\t\tlet card = await this.deckAPI.drawCard();\n\t\tthis.hand.addCard(card);\n\t\tthis.total += this.numericValue(card);\n\t}\n\n\tget total() { this.doChecks(); return this.total; }\n\tget hand() { this.doChecks(); return this.hand.cards; }\n\tget nCardsInHand() { this.doChecks(); return this.hand.nCards; }\n}\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}