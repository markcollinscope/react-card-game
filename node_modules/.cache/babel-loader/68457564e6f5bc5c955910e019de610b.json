{"ast":null,"code":"var _jsxFileName = \"/home/mark/GIT/GITHUB/react-card-game/src/App.jsx\";\n// Platform.\nimport React from 'react'; // Application\n\nimport GameEngine from './GameEngine'; // Interface\n\nimport './style.css';\nimport CardHandView from './CardHandView';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.game = undefined;\n\n    this.doStartGame = async () => {\n      await this.game.start();\n      this.setState({\n        canRender: true,\n        runningScore: 0\n      });\n    };\n\n    this.doEndGame = async () => {\n      let ncards = this.game.getNumberCards() - 1;\n      let highScore = Math.max(this.state.highScore, ncards);\n      this.setState({\n        highScore: highscore\n      });\n    };\n\n    this.handleDrawCardClick = async () => {\n      console.log(\"Clicked\");\n      await this.game.drawCard();\n      if (this.game.isBust()) this.setState({\n        runningScore: this.game.getTotal()\n      });\n    };\n\n    this.state = {\n      canRender: false,\n      runningScore: 0,\n      highScore: 0,\n      gameOver: true\n    };\n  }\n\n  async componentDidMount() {\n    this.game = new GameEngine();\n    await this.doStartGame();\n  }\n\n  render() {\n    if (!this.state.canRender) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cntr\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tar\",\n        children: [\"High Score: \", this.state.highScore, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vgap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardHandView, {\n        hand: this.game.getHand()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vgap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cntr\",\n        children: [\" Current Score: \", this.state.runningScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cntr\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          label: \"Draw Card\",\n          onClick: this.handleDrawCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mark/GIT/GITHUB/react-card-game/src/App.jsx"],"names":["React","GameEngine","CardHandView","Button","App","Component","constructor","game","undefined","doStartGame","start","setState","canRender","runningScore","doEndGame","ncards","getNumberCards","highScore","Math","max","state","highscore","handleDrawCardClick","console","log","drawCard","isBust","getTotal","gameOver","componentDidMount","render","getHand"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,OAAO,aAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAG9BC,EAAAA,WAAW,GAAG;AACV;AADU,SAFdC,IAEc,GAFPC,SAEO;;AAAA,SAKdC,WALc,GAKA,YAAY;AACtB,YAAM,KAAKF,IAAL,CAAUG,KAAV,EAAN;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA,YAAY,EAAE;AAAjC,OAAd;AACH,KARa;;AAAA,SAUdC,SAVc,GAUF,YAAY;AACpB,UAAIC,MAAM,GAAG,KAAKR,IAAL,CAAUS,cAAV,KAA6B,CAA1C;AACA,UAAIC,SAAS,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKC,KAAL,CAAWH,SAApB,EAA+BF,MAA/B,CAAhB;AACA,WAAKJ,QAAL,CAAc;AAAEM,QAAAA,SAAS,EAAEI;AAAb,OAAd;AACH,KAda;;AAAA,SAqBdC,mBArBc,GAqBQ,YAAY;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,YAAM,KAAKjB,IAAL,CAAUkB,QAAV,EAAN;AAEA,UAAI,KAAKlB,IAAL,CAAUmB,MAAV,EAAJ,EAEA,KAAKf,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE,KAAKN,IAAL,CAAUoB,QAAV;AAAhB,OAAd;AACH,KA5Ba;;AAEV,SAAKP,KAAL,GAAa;AAAER,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,YAAY,EAAE,CAAlC;AAAqCI,MAAAA,SAAS,EAAE,CAAhD;AAAmDW,MAAAA,QAAQ,EAAE;AAA7D,KAAb;AACH;;AAasB,QAAjBC,iBAAiB,GAAG;AACtB,SAAKtB,IAAL,GAAY,IAAIN,UAAJ,EAAZ;AACA,UAAM,KAAKQ,WAAL,EAAN;AACH;;AAWDqB,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKV,KAAL,CAAWR,SAAhB,EAA2B;AACvB,0BAAO;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,KAAb;AAAA,mCAAgC,KAAKQ,KAAL,CAAWH,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAK,KAAKV,IAAL,CAAUwB,OAAV;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,uCAAsC,KAAKX,KAAL,CAAWP,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,KAAK,EAAC,WAAjC;AAA6C,UAAA,OAAO,EAAE,KAAKS;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAlD6B;;AAqDlC,eAAelB,GAAf","sourcesContent":["// Platform.\nimport React from 'react';\n\n// Application\nimport GameEngine from './GameEngine';\n\n// Interface\nimport './style.css';\nimport CardHandView from './CardHandView';\nimport Button from './Button';\n\nclass App extends React.Component {\n    game = undefined;\n\n    constructor() {\n        super();\n        this.state = { canRender: false, runningScore: 0, highScore: 0, gameOver: true };\n    }\n\n    doStartGame = async () => {\n        await this.game.start();\n        this.setState({ canRender: true, runningScore: 0 });\n    }\n\n    doEndGame = async () => {\n        let ncards = this.game.getNumberCards() - 1;\n        let highScore = Math.max(this.state.highScore, ncards);\n        this.setState({ highScore: highscore})\n    }\n\n    async componentDidMount() {\n        this.game = new GameEngine();\n        await this.doStartGame();\n    }\n\n    handleDrawCardClick = async () => {\n        console.log(\"Clicked\");\n        await this.game.drawCard();\n\n        if (this.game.isBust())\n\n        this.setState({ runningScore: this.game.getTotal() })\n    }\n\n    render() {\n        if (!this.state.canRender) {\n            return <p className=\"cntr\">Loading...</p>;\n        }\n\n        return (\n            <div>\n                <p className=\"tar\">High Score: {this.state.highScore} </p>\n                <div className=\"vgap\"/>\n                <CardHandView hand = { this.game.getHand() }/>\n                <div className=\"vgap\"/>\n                <p className=\"cntr\"> Current Score: { this.state.runningScore }</p>\n                <div className=\"cntr\">\n                    <Button className=\"button\" label=\"Draw Card\" onClick={this.handleDrawCardClick}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}