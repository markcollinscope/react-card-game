{"ast":null,"code":"var _jsxFileName = \"/home/mark/GIT/GITHUB/react-card-game/src/App.jsx\";\nimport React from 'react';\nimport './style.css';\nimport Deck from './Deck';\nimport Card from './Card';\nimport CardHandView from './CardHandView';\nimport Button from './Button';\nimport TxtOut from './TxtOut';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.deck = undefined;\n\n    this.testDeck = async () => {\n      const MAX = 7;\n      let card = undefined;\n      console.log(\"testDeck - deckId: \", this.deck.id());\n\n      for (let i = 0; i < MAX; i++) {\n        card = await this.deck.drawCard();\n        console.log(\"CARD: \", i, card);\n      }\n    };\n\n    this.handleDrawCardClick = () => {\n      console.log(\"Clicked\");\n    };\n\n    this.state = {\n      canRender: false,\n      deckId: undefined\n    };\n    this.deck = new Deck();\n  }\n\n  async componentDidMount() {\n    let id = await this.deck.newDeck();\n    this.setState({\n      canRender: true,\n      deckId: id\n    });\n    console.log(\"DID MOUNT: \", this.state.deckId);\n    await this.testDeck();\n  }\n\n  render() {\n    console.log(\"Rendering - canRender: \", this.state.canRender);\n\n    if (!this.state.canRender) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cntr\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"green\",\n      children: [/*#__PURE__*/_jsxDEV(TxtOut, {\n        msg: \": 100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vgap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardHandView, {\n        cards: [new Card({\n          image: \"https://deckofcardsapi.com/static/img/JS.png\",\n          value: \" \",\n          suit: \" \",\n          code: \" \"\n        }), new Card({\n          image: \"https://deckofcardsapi.com/static/img/JS.png\",\n          value: \" \",\n          suit: \" \",\n          code: \" \"\n        }), new Card({\n          image: \"https://deckofcardsapi.com/static/img/JS.png\",\n          value: \" \",\n          suit: \" \",\n          code: \" \"\n        }), new Card({\n          image: \"https://deckofcardsapi.com/static/img/JS.png\",\n          value: \" \",\n          suit: \" \",\n          code: \" \"\n        }), new Card({\n          image: \"https://deckofcardsapi.com/static/img/JS.png\",\n          value: \" \",\n          suit: \" \",\n          code: \" \"\n        }), new Card({\n          image: \"https://deckofcardsapi.com/static/img/JS.png\",\n          value: \" \",\n          suit: \" \",\n          code: \" \"\n        }), new Card({\n          image: \"https://deckofcardsapi.com/static/img/JS.png\",\n          value: \" \",\n          suit: \" \",\n          code: \" \"\n        }), new Card({\n          image: \"https://deckofcardsapi.com/static/img/JS.png\",\n          value: \" \",\n          suit: \" \",\n          code: \" \"\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vgap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexhline\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          label: \"Draw Card\",\n          onClick: this.handleDrawCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mark/GIT/GITHUB/react-card-game/src/App.jsx"],"names":["React","Deck","Card","CardHandView","Button","TxtOut","App","Component","constructor","deck","undefined","testDeck","MAX","card","console","log","id","i","drawCard","handleDrawCardClick","state","canRender","deckId","componentDidMount","newDeck","setState","render","image","value","suit","code"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './style.css';\n\nimport Deck from './Deck';\nimport Card from './Card';\nimport CardHandView from './CardHandView';\nimport Button from './Button';\nimport TxtOut from './TxtOut';\n\nclass App extends React.Component {\n    deck = undefined;\n\n    constructor() {\n        super();\n        this.state = { canRender: false, deckId: undefined };\n        this.deck = new Deck();\n    }\n\n    async componentDidMount() {\n        let id = await this.deck.newDeck();\n\n        this.setState({ canRender: true, deckId: id });\n        console.log(\"DID MOUNT: \", this.state.deckId);\n        await this.testDeck();\n    }\n\n    testDeck = async () => {\n        const MAX=7;\n        let card = undefined;\n\n        console.log(\"testDeck - deckId: \", this.deck.id())\n\n        for (let i=0; i<MAX; i++) {\n            card = await this.deck.drawCard();\n            console.log(\"CARD: \", i, card);\n        }\n    }\n\n    handleDrawCardClick = () => {\n        console.log(\"Clicked\");\n    }\n\n    render() {\n        console.log(\"Rendering - canRender: \", this.state.canRender)\n        \n        if (! this.state.canRender) {\n            return <div className=\"cntr\"><p>Loading...</p></div>\n        }\n\n        return (\n            <div className=\"green\" >\n                <TxtOut msg=\": 100\"/>\n                <div className=\"vgap\"/>\n                <CardHandView cards = {[\n                        new Card ( { image: \"https://deckofcardsapi.com/static/img/JS.png\", value: \" \", suit: \" \", code: \" \"} ),\n                        new Card ( { image: \"https://deckofcardsapi.com/static/img/JS.png\", value: \" \", suit: \" \", code: \" \"} ),\n                        new Card ( { image: \"https://deckofcardsapi.com/static/img/JS.png\", value: \" \", suit: \" \", code: \" \"} ),\n                        new Card ( { image: \"https://deckofcardsapi.com/static/img/JS.png\", value: \" \", suit: \" \", code: \" \"} ),\n                        new Card ( { image: \"https://deckofcardsapi.com/static/img/JS.png\", value: \" \", suit: \" \", code: \" \"} ),\n                        new Card ( { image: \"https://deckofcardsapi.com/static/img/JS.png\", value: \" \", suit: \" \", code: \" \"} ),\n                        new Card ( { image: \"https://deckofcardsapi.com/static/img/JS.png\", value: \" \", suit: \" \", code: \" \"} ),\n                        new Card ( { image: \"https://deckofcardsapi.com/static/img/JS.png\", value: \" \", suit: \" \", code: \" \"} ),\n                    ]}\n                />\n                <div className=\"vgap\"/>\n                <div className=\"flexhline\">\n                    <Button label=\"Draw Card\" onClick={this.handleDrawCardClick}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}