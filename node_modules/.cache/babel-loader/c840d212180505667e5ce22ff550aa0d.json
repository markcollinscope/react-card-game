{"ast":null,"code":"import CardHand from './CardHand';\nimport DeckAPI from './DeckAPI';\nconst MAXSCORE = 21;\nexport default class GameEngine {\n  constructor() {\n    this.deckAPI = undefined;\n    this.cardHand = undefined;\n    this.gameTotal = undefined;\n\n    this.getNumberValue = c => {\n      return GameEngine.values[c.value];\n    };\n\n    this.start = async () => {\n      await this.deckAPI.newDeck();\n      this.cardHand = new CardHand();\n      this.gameTotal = 0;\n    };\n\n    this.drawCard = async () => {\n      this.doChecks();\n      let card = await this.deckAPI.drawCard();\n      this.cardHand.addCard(card);\n      this.gameTotal += this.getNumberValue(card);\n    };\n\n    this.deckAPI = new DeckAPI();\n  }\n\n  doChecks() {\n    if (!this.cardHand || this.gameTotal === undefined) throw Error(`Must call start() before other methods on GameEngine (${this.cardHand}, ${this.gameTotal})`);\n  }\n\n  isBust() {\n    return this.gameTotal > MAXSCORE;\n  }\n\n  getTotal() {\n    this.doChecks();\n    return this.gameTotal;\n  }\n\n  getHand() {\n    this.doChecks();\n    return this.cardHand;\n  }\n\n  getNumberCards() {\n    this.doChecks();\n    return this.cardHand.nCards;\n  }\n\n}\nGameEngine.values = {\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"10\": 10,\n  \"JACK\": 10,\n  \"QUEEN\": 10,\n  \"KING\": 10,\n  \"ACE\": 11\n};","map":{"version":3,"sources":["/home/mark/GIT/GITHUB/react-card-game/src/GameEngine.js"],"names":["CardHand","DeckAPI","MAXSCORE","GameEngine","constructor","deckAPI","undefined","cardHand","gameTotal","getNumberValue","c","values","value","start","newDeck","drawCard","doChecks","card","addCard","Error","isBust","getTotal","getHand","getNumberCards","nCards"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,QAAQ,GAAG,EAAjB;AAEA,eAAe,MAAMC,UAAN,CAAiB;AAsB5BC,EAAAA,WAAW,GAAG;AAAA,SAJjBC,OAIiB,GAJPC,SAIO;AAAA,SAHjBC,QAGiB,GAHND,SAGM;AAAA,SAFjBE,SAEiB,GAFLF,SAEK;;AAAA,SASjBG,cATiB,GASCC,CAAD,IAAO;AAAE,aAAOP,UAAU,CAACQ,MAAX,CAAkBD,CAAC,CAACE,KAApB,CAAP;AAAoC,KAT7C;;AAAA,SAWjBC,KAXiB,GAWT,YAAY;AACnB,YAAM,KAAKR,OAAL,CAAaS,OAAb,EAAN;AACM,WAAKP,QAAL,GAAgB,IAAIP,QAAJ,EAAhB;AACN,WAAKQ,SAAL,GAAiB,CAAjB;AACA,KAfgB;;AAAA,SAiBjBO,QAjBiB,GAiBN,YAAY;AACtB,WAAKC,QAAL;AAEA,UAAIC,IAAI,GAAG,MAAM,KAAKZ,OAAL,CAAaU,QAAb,EAAjB;AACA,WAAKR,QAAL,CAAcW,OAAd,CAAsBD,IAAtB;AACA,WAAKT,SAAL,IAAkB,KAAKC,cAAL,CAAoBQ,IAApB,CAAlB;AACA,KAvBgB;;AAChB,SAAKZ,OAAL,GAAe,IAAIJ,OAAJ,EAAf;AACG;;AAEJe,EAAAA,QAAQ,GAAG;AACV,QAAK,CAAC,KAAKT,QAAN,IAAmB,KAAKC,SAAL,KAAmBF,SAA3C,EACC,MAAMa,KAAK,CAAE,yDAAwD,KAAKZ,QAAS,KAAI,KAAKC,SAAU,GAA3F,CAAX;AACD;;AAkBDY,EAAAA,MAAM,GAAG;AACR,WAAO,KAAKZ,SAAL,GAAiBN,QAAxB;AACA;;AAEDmB,EAAAA,QAAQ,GAAG;AACV,SAAKL,QAAL;AACA,WAAO,KAAKR,SAAZ;AACA;;AAEDc,EAAAA,OAAO,GAAG;AACT,SAAKN,QAAL;AACA,WAAO,KAAKT,QAAZ;AACA;;AAEDgB,EAAAA,cAAc,GAAG;AAChB,SAAKP,QAAL;AACA,WAAO,KAAKT,QAAL,CAAciB,MAArB;AACA;;AAhE8B;AAAXrB,U,CAEbQ,M,GAAS;AACf,OAAK,CADU;AAEf,OAAK,CAFU;AAGf,OAAK,CAHU;AAIf,OAAK,CAJU;AAKf,OAAK,CALU;AAMf,OAAK,CANU;AAOf,OAAK,CAPU;AAQf,OAAK,CARU;AASf,QAAM,EATS;AAUf,UAAQ,EAVO;AAWf,WAAS,EAXM;AAYf,UAAQ,EAZO;AAaf,SAAO;AAbQ,C","sourcesContent":["import CardHand from './CardHand';\nimport DeckAPI from './DeckAPI';\n\nconst MAXSCORE = 21;\n\nexport default class GameEngine {\n\n\tstatic values = {\n\t\t\"2\": 2,\n\t\t\"3\": 3,\n\t\t\"4\": 4,\n\t\t\"5\": 5,\n\t\t\"6\": 6,\n\t\t\"7\": 7,\n\t\t\"8\": 8,\n\t\t\"9\": 9,\n\t\t\"10\": 10,\n\t\t\"JACK\": 10,\n\t\t\"QUEEN\": 10,\n\t\t\"KING\": 10, \n\t\t\"ACE\": 11\n\t};\n\n\tdeckAPI = undefined;\n\tcardHand = undefined;\n\tgameTotal = undefined;\n\n    constructor() {\n\t\tthis.deckAPI = new DeckAPI();\n    }\n\n\tdoChecks() {\n\t\tif ( !this.cardHand || (this.gameTotal === undefined) ) \n\t\t\tthrow Error(`Must call start() before other methods on GameEngine (${this.cardHand}, ${this.gameTotal})`);\n\t}\n\n\tgetNumberValue = (c) => { return GameEngine.values[c.value]; }\n\n\tstart = async () => {\n\t\tawait this.deckAPI.newDeck();\n        this.cardHand = new CardHand();\n\t\tthis.gameTotal = 0;\n\t}\n\n\tdrawCard = async () => {\n\t\tthis.doChecks();\n\n\t\tlet card = await this.deckAPI.drawCard();\n\t\tthis.cardHand.addCard(card);\n\t\tthis.gameTotal += this.getNumberValue(card);\n\t}\n\n\tisBust() {\n\t\treturn this.gameTotal > MAXSCORE;\n\t}\n\n\tgetTotal() { \n\t\tthis.doChecks(); \n\t\treturn this.gameTotal;\n\t}\n\n\tgetHand() { \n\t\tthis.doChecks();\n\t\treturn this.cardHand; \n\t}\n\t\n\tgetNumberCards() { \n\t\tthis.doChecks(); \n\t\treturn this.cardHand.nCards; \n\t}\n}\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}